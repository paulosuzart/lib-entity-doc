import{_ as t,c as a,a0 as s,o as i}from"./chunks/framework.BeGZUZv7.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"integrations/annotations/requirements.md","filePath":"integrations/annotations/requirements.md"}'),n={name:"integrations/annotations/requirements.md"};function o(r,e,l,d,h,p){return i(),a("div",null,e[0]||(e[0]=[s(`<h2 id="requirements-for-annotated-methods" tabindex="-1">Requirements for Annotated Methods <a class="header-anchor" href="#requirements-for-annotated-methods" aria-label="Permalink to &quot;Requirements for Annotated Methods&quot;">​</a></h2><p>When using the annotation-based DSL, your handler and validator methods must follow strict signature requirements to ensure correct processing. Here are the requirements for each type:</p><h3 id="handle-methods" tabindex="-1">@Handle Methods <a class="header-anchor" href="#handle-methods" aria-label="Permalink to &quot;@Handle Methods&quot;">​</a></h3><ul><li>Must have <strong>exactly 4 parameters</strong> in this order: <ol><li>The state enum type (e.g., <code>PaymentState</code>)</li><li>The request type (e.g., <code>PaymentRequest</code>)</li><li>The command type (as defined in your <code>@Action(command = ...)</code>)</li><li>A <code>StateMutator</code> (from the framework)</li></ol></li><li><strong>Example:</strong><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Handle</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> handle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(PaymentState state, PaymentRequest req, SubmitPaymentCommand cmd, StateMutator mutator) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><strong>Common error:</strong> Wrong parameter count or wrong types/order will result in an error: <code>@Handle method must have exactly 4 parameters (state, request, command, mutator)</code></li></ul><h3 id="in-state-validator-methods" tabindex="-1">In-State Validator Methods <a class="header-anchor" href="#in-state-validator-methods" aria-label="Permalink to &quot;In-State Validator Methods&quot;">​</a></h3><ul><li>Must have <strong>exactly 3 parameters</strong> in this order: <ol><li>The state enum type</li><li>The request type</li><li>The validation context (usually <code>ValidationContext</code>)</li></ol></li><li><strong>Example:</strong><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> validate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(PaymentState state, PaymentRequest req, ValidationContext ctx) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><strong>Common error:</strong> Wrong parameter count or wrong types/order will result in an error: <code>InStateValidator &#39;validate&#39; method must have exactly 3 parameters (state, request, ctx)</code></li></ul><h3 id="transition-validator-methods" tabindex="-1">Transition Validator Methods <a class="header-anchor" href="#transition-validator-methods" aria-label="Permalink to &quot;Transition Validator Methods&quot;">​</a></h3><ul><li>Must have <strong>exactly 4 parameters</strong> in this order: <ol><li>From-state (state enum type)</li><li>To-state (state enum type)</li><li>The request type</li><li>The validation context (usually <code>ValidationContext</code>)</li></ol></li><li><strong>Example:</strong><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> validate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(PaymentState from, PaymentState to, PaymentRequest req, ValidationContext ctx) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><strong>Common error:</strong> Wrong parameter count or wrong types/order will result in an error: <code>TransitionValidator &#39;validate&#39; method must have exactly 4 parameters (from, to, request, ctx)</code></li></ul><h3 id="troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#troubleshooting" aria-label="Permalink to &quot;Troubleshooting&quot;">​</a></h3><ul><li>If you see errors about parameter counts or types, double-check your method signatures against the above requirements.</li><li>All types must match exactly (including generics if used).</li><li>For more advanced usage or to bypass annotation restrictions, use the builder DSL in the core module.</li></ul>`,10)]))}const m=t(n,[["render",o]]);export{u as __pageData,m as default};
