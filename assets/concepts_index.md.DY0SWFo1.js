import{_ as t,c as a,a0 as i,o as s}from"./chunks/framework.DX7EX5Ix.js";const u=JSON.parse('{"title":"Core Concepts","description":"","frontmatter":{},"headers":[],"relativePath":"concepts/index.md","filePath":"concepts/index.md"}'),n={name:"concepts/index.md"};function o(r,e,c,l,d,h){return s(),a("div",null,e[0]||(e[0]=[i('<h1 id="core-concepts" tabindex="-1">Core Concepts <a class="header-anchor" href="#core-concepts" aria-label="Permalink to &quot;Core Concepts&quot;">​</a></h1><p>LibEntity is built around several core concepts that work together to help you build robust, maintainable business logic. This section covers each concept in detail:</p><h2 id="entities" tabindex="-1"><a href="/concepts/entities.html">Entities</a> <a class="header-anchor" href="#entities" aria-label="Permalink to &quot;[Entities](/concepts/entities)&quot;">​</a></h2><p>The fundamental building blocks that represent your business objects with their fields, states, and actions.</p><h2 id="fields" tabindex="-1"><a href="/concepts/fields.html">Fields</a> <a class="header-anchor" href="#fields" aria-label="Permalink to &quot;[Fields](/concepts/fields)&quot;">​</a></h2><p>Properties that hold your entity&#39;s data, with built-in validation and type safety.</p><h2 id="actions" tabindex="-1"><a href="/concepts/actions.html">Actions</a> <a class="header-anchor" href="#actions" aria-label="Permalink to &quot;[Actions](/concepts/actions)&quot;">​</a></h2><p>Operations that can be performed on entities, encapsulating business logic and state transitions.</p><h2 id="filters" tabindex="-1"><a href="/concepts/filters.html">Filters</a> <a class="header-anchor" href="#filters" aria-label="Permalink to &quot;[Filters](/concepts/filters)&quot;">​</a></h2><p>You can generate filters automatically or by hand to speed up your development with production grade dynamic filter structure.</p>',10)]))}const f=t(n,[["render",o]]);export{u as __pageData,f as default};
